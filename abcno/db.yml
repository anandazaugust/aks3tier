# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mysql-pvc
# spec:
#   accessModes:
#     - ReadWriteOnce  # This allows only one pod to read/write at a time
#   resources:
#     requests:
#       storage: 3Gi  # Adjust the storage size as needed
#   # storageClassName: standard  # Use the default storage class (or specify another if necessary)

...

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: mysql-init-script
# data:
#   init.sql: |
#     -- Create the users table
#     CREATE TABLE IF NOT EXISTS users (
#       id INT AUTO_INCREMENT PRIMARY KEY,
#       name VARCHAR(100) NOT NULL,
#       email VARCHAR(100) NOT NULL
#     );

#     -- Insert some initial users
#     INSERT INTO users (name, email) VALUES ('John Doe', 'john.doe@example.com');
#     INSERT INTO users (name, email) VALUES ('Jane Smith', 'jane.smith@example.com');
#     INSERT INTO users (name, email) VALUES ('Sam Green', 'sam.green@example.com');

# ---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql1
  template:
    metadata:
      labels:
        app: mysql1
    spec:
      containers:
        - name: mysql
          image: mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: "rootpassword"
            - name: MYSQL_DATABASE
              value: "ananddb"
            - name: MYSQL_USER
              value: "mysqluser"
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-password
                  key: db1-password
            # - name: INIT_SQL
            #   valueFrom:
            #     configMapKeyRef:
            #       name: mysql-init-script  # ConfigMap that holds the init.sql
            #       key: init.sql  # Key for the SQL script
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql  # MySQL expects to write data here
            # - name: init-script-volume
            #   mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: mysql-data
          emptyDir: {}  # Temporary storage for MySQL data
          # persistentVolumeClaim:
          #   claimName: mysql-pvc
        # - name: init-script-volume
        #   configMap:
        #     name: mysql-init-script  # Mounts the init.sql script
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
spec:
  selector:
    app: mysql1
  ports:
    - port: 3306
      targetPort: 3306
  clusterIP: None  # Headless service
